<!-- 금주의 인기 전시회, 전시회 검색, 지역 버튼, 전시회 나열(show.erb), 달력 링크 버튼 -->

<div class="topOfMain blackBoderBox">
  <div class="row">
    <img class="mainLogoImg" src="/img/mainLogo.png">
  </div>
  <div class="row">
    <div class="searchBox form-group has-feedback">
      <form action="/exhibition/keywordResult" method="GET">
        <input type="text" class="searchInput" name="search" placeholder="검색어를 입력해주세요">
        <span class="glyphicon glyphicon-search searchIcon form-control-feedback"></span>
      </form>
    </div>
  </div>
</div>
<div class="middleOfMain blackBoderBox">
<img class="middleTitle" src="/img/middleTitle.png">
<div id="myCarousel" class="carousel fdi-Carousel slide">
 <!-- Carousel items -->
  <div class="carousel fdi-Carousel slide" id="eventCarousel" data-interval="0">
    <div class="carousel-inner onebyone-carosel">
      <div class="item active">
        <% @exhibiRandom.each do |r| %>
          <div class="col-md-2">
              <a href='/exhibition/show_detail/<%=r.id%>'>
                <img src="<%= r.imageAddress %>" alt="<%= r.title %>" class="img-responsive center-block" width='150px' height="210px">
              </a>
            <div class="description">
              <p style="font-size: 8px;"><%= "#{truncate(r.title, :length => 10)}" %></p>
              <p style="font-size: 5px;"><%= r.spot %></p>
            </div>
          </div>
        <% end %>
      </div>
      <div class="item">
        <% @exhibiRandom.each do |r| %>
          <div class="col-md-3">
            <a href='/exhibition/show_detail/<%=r.id%>'>
              <img src="<%= r.imageAddress %>" alt="<%= r.title %>" class="img-responsive center-block" width='150px' height="210px">
            </a>
            <div class="description">
              <h5 style="font-size: 8px;"><%= "#{truncate(r.title, :length => 10)}" %></h5>
              <p style="font-size: 5px;"><%= r.spot %></p>
            </div>
          </div>
        <% end %>
      </div>
    </div>
    <a class="left carousel-control" href="#eventCarousel" data-slide="prev"></a>
    <a class="right carousel-control" href="#eventCarousel" data-slide="next"></a>
  </div>
  <!--/carousel-inner-->
</div><!--/myCarousel-->  
</div>
<!-- 전시회 나열 페이지 -->
<div class="bodyOfMain blackBoderBox">
<div class="container">
  <div class="row">
    <a href="/exhibition/locationResult"> 지역</a>
      <select name="locationSelect">
        <% @locationAll.each do |location| %>
        <option value="<%= location %>"><%= location %></option>
        <% end %>
      </select> 
    <%#= form_tag '/exhibition/main#showExhibition' do %>
    <form action="/exhibition/main#showExhibition">
      <div class="sortBox">
        <select name="type">
          <option value="조회수순">조회수순</option>
          <option value="좋아요순">좋아요순</option>
        </select>
        <span class="fa fa-sort-desc"></span>
      </div>  
      <input type="submit" class="sortBy" value="정렬">
    </form>
    <%# end %>
  </div>
  <div id="showExhibition ">
      <% @exhibitions.each do |p| %>
      <div class="showExhibitionBox">
        <div class="showExhibitionTitle">
          <a href='/exhibition/show_detail/<%=p.id%>'>
            <p class="itemTitle"><%= "#{truncate(p.title, :length => 25)}" %></p>
          </a>          
        </div>
        <div class="showExhibitionImg">
            <img src='<%=p.imageAddress%>' width='180px' height="240px">          
        </div>
        <div class="showExhibitionItem">
          <p class="itemSpot"><%= "#{truncate(p.spot, :length => 15)}" %></p>
        </div>
      </div>
      <% end %>    
  </div>
  <div class="paginationBox">
    <%= will_paginate @exhibitions, :previous_label => '<' , :next_label => '>'  %>
  </div>  
</div>
</div>

<script>
  var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;

class Carousel extends React.Component {
    
    constructor(props) {
        super(props)
        this.state = {
            items: this.props.items,
            active: this.props.active,
            direction: ''
        }
        this.rightClick = this.moveRight.bind(this)
        this.leftClick = this.moveLeft.bind(this)
    }

    generateItems() {
        var items = []
        var level
        console.log(this.state.active)
        for (var i = this.state.active - 2; i < this.state.active + 3; i++) {
            var index = i
            if (i < 0) {
                index = this.state.items.length + i
            } else if (i >= this.state.items.length) {
                index = i % this.state.items.length
            }
            level = this.state.active - i
            items.push(<Item key={index} id={this.state.items[index]} level={level} />)
        }
        return items
    }
    
    moveLeft() {
        var newActive = this.state.active
        newActive--
        this.setState({
            active: newActive < 0 ? this.state.items.length - 1 : newActive,
            direction: 'left'
        })
    }
    
    moveRight() {
        var newActive = this.state.active
        this.setState({
            active: (newActive + 1) % this.state.items.length,
            direction: 'right'
        })
    }
    
    render() {
        return(
            <div id="carousel" className="noselect">
                <div className="arrow arrow-left" onClick={this.leftClick}><i className="fi-arrow-left"></i></div>
                <ReactCSSTransitionGroup 
                    transitionName={this.state.direction}>
                    {this.generateItems()}
                </ReactCSSTransitionGroup>
                <div className="arrow arrow-right" onClick={this.rightClick}><i className="fi-arrow-right"></i></div>
            </div>
        )
    }
}

class Item extends React.Component {
    
    constructor(props) {
        super(props)
        this.state = {
            level: this.props.level
        }
    }
    
    render() {
        const className = 'item level' + this.props.level
        return(
            <div className={className}>
                {this.props.id}
            </div>
        )
    }
}

var items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
ReactDOM.render(<Carousel items={items} active={0}/>, document.getElementById('app'))
</script>